@page "/register"
@inject IAuthenticationRepo AuthRepo
@inject NavigationManager NavManeger

    <div class="card">
        <h3 class="card-title">Registar Usuario</h3>
        <div class="card-body">
            <EditForm Model="RegistratioModel" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="email">Correo Electronico</label>
                    <InputText Id="email" class="form-control" @bind-Value="RegistratioModel.EmailAddress" />
                    <ValidationMessage For="@(() => RegistratioModel.EmailAddress)" />
                </div>
                <div class="form-group">
                    <label for="password">Contraseña</label>
                    <InputText Id="password" type="password" class="form-control" @bind-Value="RegistratioModel.Password" />
                    <ValidationMessage For="@(() => RegistratioModel.Password)" />
                </div>
                <div class="form-group">
                    <label for="confirmpassword">Confirmar Contraseña</label>
                    <InputText Id="confirmpassword" type="password" class="form-control" @bind-Value="RegistratioModel.PasswordConfirmation" />
                    <ValidationMessage For="@(() => RegistratioModel.PasswordConfirmation)" />
                </div>
                <button type="submit" class="btn btn-primary">Register</button>
            </EditForm>
        </div>
        @if (Failed)
        {
            <div class="alert alert-danger">
                <p>Algo salio mal con el registro</p>
            </div>
        }
    </div>




@code {
    private RegistratioVM RegistratioModel = new RegistratioVM();
    bool Failed = false;

    private async Task HandleRegistration()
    {
        var response = await AuthRepo.Register(RegistratioModel);
        if (response)
        {
            NavManeger.NavigateTo("/");
        }
        else
        {
            Failed = true;
        }
    }
}
