@page "/login"
@inject IAuthenticationRepo authenticationRepo
@inject NavigationManager navManeger
<div class="card">
    <h3 class="card-title">Registar Usuario</h3>
    <div class="card-body">
        <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="email">Correo Electronico</label>
                <InputText Id="email" class="form-control" @bind-Value="LoginModel.EmailAddress" />
                <ValidationMessage For="@(() => LoginModel.EmailAddress)" />
            </div>
            <div class="form-group">
                <label for="password">Contraseña</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="LoginModel.Password" />
                <ValidationMessage For="@(() => LoginModel.Password)" />
            </div>
           
            <button type="submit" class="btn btn-primary">Login</button>
        </EditForm>
    </div>
    @if (!response)
    {
        <div class="alert alert-danger">
            <p>Algo salio mal con el Login</p>
        </div>
    }
</div>




@code {
    private LoginVM LoginModel = new LoginVM();
    private bool response = true;

    private async Task HandleLogin()
    {
        response = await authenticationRepo.Login(LoginModel);
        if (response)
        {
            navManeger.NavigateTo("/");
        }
    }
}

